{"version":3,"sources":["../../src/pages/register/register.module.ts","../../src/pages/register/register.ts"],"names":[],"mappings":"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","file":"0.main.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { RegisterPage } from './register';\n\n@NgModule({\n  declarations: [\n    RegisterPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(RegisterPage),\n  ],\n  exports: [\n    RegisterPage\n  ]\n})\nexport class RegisterModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/register/register.module.ts","import { OnInit, Component } from '@angular/core';\nimport { AlertController, IonicPage, NavController, NavParams, LoadingController, Loading } from 'ionic-angular';\n//import { IonicPage } from 'ionic-angular';\n//import {OnInit, Component} from \"@angular/core\";\nimport {FormGroup, FormBuilder, FormControl, Validators} from \"@angular/forms\";\nimport { DefaultApi } from '../../providers/api/DefaultApi';\n\nimport * as models  from '../../providers/model/models';\n\n\n/**\n * Generated class for the Register page.\n *\n * See http://ionicframework.com/docs/components/#navigation for more info\n * on Ionic pages and navigation.\n */\n@IonicPage()\n@Component({\n  selector: 'page-register',\n  templateUrl: 'register.html',\n})\nexport class RegisterPage implements OnInit {\n\n  loading: Loading;\n  myForm: FormGroup;\n  userInfo: {name: string, email: string, password: string, confirmPassword: string, secretKey: string} = \n            {name: 'Phu', email: 'uyphu@yahoo.com', password: '12345', confirmPassword: '12345', secretKey: '12345'};\n\n  constructor(public navCtrl: NavController, public navParams: NavParams, private alertCtrl: AlertController,\n  \tpublic formBuilder: FormBuilder, private api: DefaultApi, private loadingCtrl: LoadingController) {\n\n  }\n\n  ngOnInit(): any {\n    this.myForm = this.formBuilder.group({\n      'name': ['', [Validators.required, Validators.minLength(3), this.nameValidator.bind(this)]],      \n      'email': ['', [Validators.required, this.emailValidator.bind(this)]],\n      'password': ['', [Validators.required, this.passwordValidator.bind(this)]],\n      'confirmPassword': ['', [Validators.required, this.passwordValidator.bind(this)]],\n      'secretKey': ['', [Validators.required, this.passwordValidator.bind(this)]]\n    });\n  }\n\n  onSubmit() {\n    this.showLoading();\n    var request: models.RegisterUserRequest = {} as models.RegisterUserRequest;\n    request.password = this.userInfo.password;\n    request.displayName = this.userInfo.name;\n    request.email = this.userInfo.email;    \n    request.secretKey = this.userInfo.secretKey;\n    request.imageUrl = 'imageUrl';\n\n    debugger;\n\n    this.api.registerPost(request).subscribe(response => {\n        this.navCtrl.push('ActivatePage');\n      },\n        error => {\n          this.showError(error);\n        \n      });\n  }\n\n  isValid(field: string) {\n    //let formField = this.myForm.find(field);\n    //return formField.valid || formField.pristine;\n    return true;\n  }\n\n  nameValidator(control: FormControl): {[s: string]: boolean} {\n    if (!control.value.match(\"^[a-zA-Z ,.'-]+$\")) {\n      return {invalidName: true};\n    }\n  }\n\n  phoneValidator(control: FormControl): {[s: string]: boolean} {\n    if (control.value !== '') {\n      if (!control.value.match('\\\\(?\\\\d{3}\\\\)?-? *\\\\d{3}-? *-?\\\\d{4}')) {\n        return {invalidPhone: true};\n      }\n    }\n  }\n\n  passwordValidator(control: FormControl): {[s: string]: boolean} {\n    if (control.value !== '') {\n      //if (!control.value.match('\\\\(?\\\\d{3}\\\\)?-? *\\\\d{3}-? *-?\\\\d{4}')) {\n        return {invalidPassword: true};\n      //}\n    }\n  }\n\n  emailValidator(control: FormControl): {[s: string]: boolean} {\n    if (!(control.value.toLowerCase().match('^[a-zA-Z]\\\\w*@gmail\\\\.com$') || control.value.toLowerCase().match('^[a-zA-Z]\\\\w*@yahoo\\\\.com$'))) {\n      return {invalidEmail: true};\n    }\n  }\n\n  confirmEmailValidator(email: FormControl, confirmEmail: FormControl): {[s: string]: boolean} {\n    if (!(email.value.toLowerCase() == confirmEmail.value.toLowerCase())) {\n      return {invalidConfirmEmail: true};\n    }\n\n  }\n\n  showLoading() {\n    this.loading = this.loadingCtrl.create({\n      content: 'Please wait...',\n      dismissOnPageChange: true\n    });\n    this.loading.present();\n  }\n\n  showError(text) {\n    this.loading.dismiss();\n    \n    var object = JSON.parse(text._body);\n    console.log(object);\n \n    let alert = this.alertCtrl.create({\n      title: 'Fail',\n      subTitle: object.errorMessage,\n      buttons: ['OK']\n    });\n    alert.present();\n  }\n  \n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/register/register.ts"],"sourceRoot":""}