{"version":3,"sources":["../../src/pages/edit-secret/edit-secret.ts","../../src/pages/login/login.ts","../../src/pages/logout/logout.ts","../../src/pages/profile/profile.ts","../../node_modules/@angular/core/esm5 lazy","../../src/providers/auth-service.ts","../../src/providers/configuration.ts","../../src lazy","../../src/pages/home/home.ts","../../src/app/main.ts","../../src/app/app.module.ts","../../src/providers/variables.ts","../../src/app/app.component.ts","../../src/pages/hello-ionic/hello-ionic.ts","../../src/pages/list/list.ts","../../src/providers/api/DefaultApi.ts","../../src/utils/utils.ts","../../src/pages/secret-details/secret-details.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { OnInit, Component } from '@angular/core';\nimport { AlertController, IonicPage, NavController, NavParams, LoadingController, Loading } from 'ionic-angular';\n\nimport {FormGroup, FormBuilder, FormControl, Validators} from \"@angular/forms\";\nimport { Storage } from '@ionic/storage';\nimport { DefaultApi } from '../../providers/api/DefaultApi';\n\nimport { Utils } from '../../utils/utils';\nimport * as models  from '../../providers/model/models';\nimport * as CryptoJS from 'crypto-js/crypto-js';\n/**\n * Generated class for the AddSecret page.\n *\n * See http://ionicframework.com/docs/components/#navigation for more info\n * on Ionic pages and navigation.\n */\n@IonicPage()\n@Component({\n  selector: 'page-edit-secret',\n  templateUrl: 'edit-secret.html',\n})\nexport class EditSecretPage implements OnInit {\n\n  secret: any;\n  loading: Loading;\n  myForm: FormGroup;\n  SECERET_KEY: string = '';\n\n  constructor(public navCtrl: NavController, public navParams: NavParams, private alertCtrl: AlertController,\n  \tpublic formBuilder: FormBuilder, private api: DefaultApi, private loadingCtrl: LoadingController, private storage: Storage\n    ) {\n\n    this.secret = this.navParams.get('secret');\n\n  }\n\n  ngOnInit(): any {\n\n    this.storage.get('user').then((val) => {\n      let loginUser: models.LoginUserResponse = val;\n      this.SECERET_KEY = loginUser.item.secretKey;\n      this.api.configuration = Utils.getConfiguration(loginUser);      \n    });\n\n    this.storage.get('user').then((val) => {\n      this.secret.userId = val.item.id;\n      this.storage.get('secretKey').then((value) => {\n        this.SECERET_KEY = value;\n           let bytes = CryptoJS.AES.decrypt(this.secret.password.toString(), this.SECERET_KEY);\n           let plaintext = bytes.toString(CryptoJS.enc.Utf8);\n           this.secret.password = plaintext.toString();\n           this.setPasswordEncrypted(this.secret.password.toString());\n      });\n    });\n    \n    this.myForm = this.formBuilder.group({\n      'domain': ['', [Validators.required, Validators.minLength(3), this.domainValidator.bind(this)]],\n      'username': ['', [Validators.required, this.usernameValidator.bind(this)]],\n      'password': ['', [Validators.required, this.passwordValidator.bind(this)]],\n      'encryptedPassword': ['', [Validators.required, this.passwordValidator.bind(this)]],\n      'note': ['', [Validators.required, this.noteValidator.bind(this)]]\n    });\n    \n  }\n\n  onSubmit() {\n    this.showLoading();\n    var request: models.UpdateSecretRequest = {} as models.UpdateSecretRequest;\n    request.id = this.secret.id;\n    request.password = this.secret.encryptedPassword;    \n    request.note = this.secret.note;\n    debugger;\n    this.api.secretsIdPut(request.id, request).subscribe(response => {        \n        this.navCtrl.push('HomePage');\n      },\n        error => {\n          this.showError(error);\n        \n      });\n  }\n\n  isValid(field: string) {\n    let formField = this.myForm.controls[field];\n    let valid = (formField.valid || formField.pristine);\n    \n    return valid;\n  }\n\n  domainValidator(control: FormControl): {[s: string]: boolean} {\n    if (control.value !== '') {\n      return {invalidDomain: true};\n    }\n  }\n\n  usernameValidator(control: FormControl): {[s: string]: boolean} {\n    if (control.value !== '') {\n      return {invalidUsername: true};\n    }\n  }\n\n  passwordValidator(control: FormControl): {[s: string]: boolean} {\n    if (control.value !== '') {      \n        return {invalidPassword: true};      \n    }\n  }\n\n  noteValidator(control: FormControl): {[s: string]: boolean} {\n        return {invalidNote: true};\n  }\n\n  onInputTime(password: string){\n  \tthis.setPasswordEncrypted(password);\n    //console.log(this.getPasswordEcrypted(this.secret.encryptedPassword));\n  }\n\n  getPasswordEcrypted(pwd: string): string {\n    // Decrypt \n    var bytes = CryptoJS.AES.decrypt(pwd.toString(), this.SECERET_KEY);\n    var plaintext = bytes.toString(CryptoJS.enc.Utf8);\n    return plaintext;\n  }\n\n  setPasswordEncrypted(pwd: string): void {\n    // Encrypt \n    var ciphertext = CryptoJS.AES.encrypt(pwd, this.SECERET_KEY);\n    this.secret.encryptedPassword = ciphertext.toString();\n  }\n\n  showLoading() {\n    this.loading = this.loadingCtrl.create({\n      content: 'Please wait...',\n      dismissOnPageChange: true\n    });\n    this.loading.present();\n  }\n\n  showError(text) {\n    this.loading.dismiss();\n    let errorMsg = this.getErrorMessage(text)\n    let alert = this.alertCtrl.create({\n      title: 'Fail',\n      subTitle: errorMsg,\n      buttons: ['OK']\n    });\n    alert.present();\n  }  \n\n  getErrorMessage(text): string {\n    try {\n      var object = JSON.parse(text._body);\n      return object.errorMessage;\n    } catch (e){\n      return text;\n    }\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/edit-secret/edit-secret.ts","import { Component } from '@angular/core';\nimport { NavController, AlertController, LoadingController, Loading, IonicPage } from 'ionic-angular';\nimport { AuthService } from '../../providers/auth-service';\nimport { DefaultApi } from '../../providers/api/DefaultApi';\n\nimport { Storage } from '@ionic/storage'\nimport * as models  from '../../providers/model/models';\nimport { Configuration } from '../../providers/configuration';\n\n/**\n * Generated class for the Login page.\n *\n * See http://ionicframework.com/docs/components/#navigation for more info\n * on Ionic pages and navigation.\n */\n@IonicPage()\n@Component({\n  selector: 'page-login',\n  templateUrl: 'login.html',\n})\nexport class LoginPage {\n  loading: Loading;\n  registerCredentials = { email: '', password: '' };  \n \n  constructor(private nav: NavController, private auth: AuthService, \n    private alertCtrl: AlertController, private loadingCtrl: LoadingController,\n    private api: DefaultApi, private storage: Storage) { }\n \n  public createAccount(event) {\n    this.nav.push('RegisterPage');\n  }\n\n  public login() {\n    this.showLoading();\n    if (this.registerCredentials.email === null || this.registerCredentials.password === null) {\n      return this.showError(\"Please insert credentials\");\n    } else {\n      let request: models.LoginUserRequest = {} as models.LoginUserRequest;\n      request.email = this.registerCredentials.email;\n      request.password = this.registerCredentials.password;\n      this.api.loginPost(request).subscribe(response => {\n        if (response.token !== null) {                       \n          this.storage.set('user', response);          \n          this.storage.set('passcode', this.registerCredentials.password);          \n          this.nav.setRoot('SecretKeyPage');\n        } else {\n          this.showError(\"Access Denied\");\n        }\n      },\n        error => {\n          this.showError(error);                  \n      });\n    }          \n  }  \n \n  showLoading() {\n    this.loading = this.loadingCtrl.create({\n      content: 'Please wait...',\n      dismissOnPageChange: true\n    });\n    this.loading.present();\n  }\n \n  showError(text) {\n    this.loading.dismiss();\n    let errorMsg = this.getErrorMessage(text)\n    let alert = this.alertCtrl.create({\n      title: 'Fail',\n      subTitle: errorMsg,\n      buttons: ['OK']\n    });\n    alert.present();\n  }  \n\n  getErrorMessage(text): string {\n    try {\n      var object = JSON.parse(text._body);\n      return object.errorMessage;\n    } catch (e){\n      return text;\n    }\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\n\n/**\n * Generated class for the Logout page.\n *\n * See http://ionicframework.com/docs/components/#navigation for more info\n * on Ionic pages and navigation.\n */\n@IonicPage()\n@Component({\n  selector: 'page-logout',\n  templateUrl: 'logout.html',\n})\nexport class LogoutPage {\n\n  constructor(public navCtrl: NavController, public navParams: NavParams) {\n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad Logout');\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/logout/logout.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\n\n/**\n * Generated class for the Profile page.\n *\n * See http://ionicframework.com/docs/components/#navigation for more info\n * on Ionic pages and navigation.\n */\n@IonicPage()\n@Component({\n  selector: 'page-profile',\n  templateUrl: 'profile.html',\n})\nexport class ProfilePage {\n\n  constructor(public navCtrl: NavController, public navParams: NavParams) {\n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad Profile');\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/profile/profile.ts","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 119;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/esm5 lazy\n// module id = 119\n// module chunks = 9","import { Injectable } from '@angular/core';\nimport {Observable} from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\n \nexport class User {\n  name: string;\n  email: string;\n \n  constructor(name: string, email: string) {\n    this.name = name;\n    this.email = email;\n  }\n}\n \n@Injectable()\nexport class AuthService {\n  currentUser: User;  \n \n  public login(credentials) {\n    if (credentials.email === null || credentials.password === null) {\n      return Observable.throw(\"Please insert credentials\");\n    } else {\n      return Observable.create(observer => {\n        // At this point make a request to your backend to make a real check!\n        let access = (credentials.password === \"pass\" && credentials.email === \"email\");\n        this.currentUser = new User('Simon', 'saimon@devdactic.com');\n        observer.next(access);\n        observer.complete();\n      });\n    }\n  }  \n \n  public register(credentials) {\n    if (credentials.email === null || credentials.password === null) {\n      return Observable.throw(\"Please insert credentials\");\n    } else {\n      // At this point store the credentials to your backend!\n      return Observable.create(observer => {\n        observer.next(true);\n        observer.complete();\n      });\n    }\n  }\n \n  public getUserInfo() : User {\n    return this.currentUser;\n  }\n \n  public logout() {\n    return Observable.create(observer => {\n      this.currentUser = null;\n      observer.next(true);\n      observer.complete();\n    });\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/providers/auth-service.ts","export class Configuration {\n    apiKey: string;\n    username: string;\n    password: string;\n    accessToken: string | (() => string);\n    withCredentials: boolean;\n}\n\n\n// WEBPACK FOOTER //\n// ./src/providers/configuration.ts","var map = {\n\t\"../pages/activate/activate.module\": [\n\t\t290,\n\t\t3\n\t],\n\t\"../pages/add-secret/add-secret.module\": [\n\t\t291,\n\t\t2\n\t],\n\t\"../pages/edit-secret/edit-secret.module\": [\n\t\t292,\n\t\t8\n\t],\n\t\"../pages/home/home.module\": [\n\t\t293,\n\t\t7\n\t],\n\t\"../pages/login/login.module\": [\n\t\t294,\n\t\t6\n\t],\n\t\"../pages/logout/logout.module\": [\n\t\t295,\n\t\t5\n\t],\n\t\"../pages/profile/profile.module\": [\n\t\t296,\n\t\t4\n\t],\n\t\"../pages/register/register.module\": [\n\t\t298,\n\t\t1\n\t],\n\t\"../pages/secret-key/secret-key.module\": [\n\t\t297,\n\t\t0\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids)\n\t\treturn Promise.reject(new Error(\"Cannot find module '\" + req + \"'.\"));\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(ids[0]);\n\t});\n};\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 164;\nmodule.exports = webpackAsyncContext;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 164\n// module chunks = 9","import { OnInit, Component } from '@angular/core';\nimport { AlertController, IonicPage, NavController, NavParams, LoadingController, Loading } from 'ionic-angular';\n\nimport { SecretDetailsPage } from '../secret-details/secret-details';\nimport { DefaultApi } from '../../providers/api/DefaultApi';\nimport * as models  from '../../providers/model/models';\nimport { Storage } from '@ionic/storage';\nimport { Utils } from '../../utils/utils';\n\n/**\n * Generated class for the Home page.\n *\n * See http://ionicframework.com/docs/components/#navigation for more info\n * on Ionic pages and navigation.\n */\n@IonicPage()\n@Component({\n  selector: 'page-home',\n  templateUrl: 'home.html',\n})\nexport class HomePage implements OnInit {\n\n  loading: Loading;\n  icons: string[];\n  items: Array<models.Secret>;\n\n  searchInput: string = '';\n\n  QUERY_STR: string = '';\n  LIMIT: string = '15'\n  CURSOR: string = undefined;\n  SEARCH_TEXT: string = undefined;\n\n  constructor(public navCtrl: NavController, public navParams: NavParams, private api: DefaultApi,\n              private storage: Storage, private loadingCtrl: LoadingController, private alertCtrl: AlertController) {\n    this.icons = ['flask', 'wifi', 'beer', 'football', 'basketball', 'paper-plane',\n    'american-football', 'boat', 'bluetooth', 'build'];\n    this.items = [];    \n  }\n\n  ngOnInit(): any {\n\n    this.storage.get('user').then((val) => {     \n      let loginUser: models.LoginUserResponse = val; \n      this.QUERY_STR = 'userId:' + loginUser.item.id;      \n      this.api.configuration = Utils.getConfiguration(loginUser);  \n      this.getSecrets(this.QUERY_STR);\n      \n    });    \n  }\n\n  getSecrets(query:string) {\n    this.api.secretsSearchGet(query, this.LIMIT, this.CURSOR).subscribe(response => {       \n        if (response != null) {\n          for (let i in response.items) {              \n             this.items.push(response.items[i]);\n          }\n          this.CURSOR = response.nextPageToken;\n        }\n      },\n        error => {\n          this.showError(error);\n        \n      });\n  }\n\n  doInfinite(infiniteScroll) {\n    if (this.CURSOR !== undefined) {\n      setTimeout(() => {\n        if (this.SEARCH_TEXT !== undefined) {\n          this.getSecrets(this.SEARCH_TEXT);\n        } else {\n          this.getSecrets(this.QUERY_STR);\n        }\n        \n        infiniteScroll.complete();\n      }, 500);\n    }\n  }\n\n\n  itemTapped(event, secret) {\n    this.navCtrl.push(SecretDetailsPage, { 'secret': secret });\n  }\n\n  onInput(event) {\n    if (this.searchInput.length >= 3) {\n      this.items = [];\n      this.CURSOR = undefined;\n      console.log(this.searchInput);\n      this.SEARCH_TEXT = this.QUERY_STR + '&searchText:' + this.searchInput;\n      this.getSecrets(this.SEARCH_TEXT);\n    } else if (this.searchInput.length == 0) {\n      this.SEARCH_TEXT = undefined;\n      this.CURSOR = undefined;\n      this.items = [];\n      this.getSecrets(this.QUERY_STR);\n    } \n    \n  }\n\n  onCancel(event) {\n\n  }\n\n  deleteItem(event, secret) {  \n    this.api.secretsIdDelete(secret.id).subscribe(response => {        \n        //if (response != null) {\n          let index: number = this.items.indexOf(secret);\n          if (index !== -1) {\n              this.items.splice(index, 1);\n          } \n        //}\n      },\n        error => {\n          this.showError(error);\n        \n      });\n  }\n\n  openAdd() {\n    this.navCtrl.push('AddSecret');\n  }\n\n  showLoading() {\n    this.loading = this.loadingCtrl.create({\n      content: 'Please wait...',\n      dismissOnPageChange: true\n    });\n    this.loading.present();\n  }\n\n  showError(text) {\n    this.loading.dismiss();\n   \n    let errorMsg = this.getErrorMessage(text)\n    let alert = this.alertCtrl.create({\n      title: 'Fail',\n      subTitle: errorMsg,\n      buttons: ['OK']\n    });\n    alert.present();\n  }  \n\n  getErrorMessage(text): string {\n    try {\n      var object = JSON.parse(text._body);\n      return object.errorMessage;\n    } catch (e){\n      return text;\n    }\n  }\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/home/home.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import { Http, XHRBackend, RequestOptions, HttpModule } from '@angular/http';\nimport { AuthService } from './../providers/auth-service';\nimport { DefaultApi } from './../providers/api/DefaultApi';\nimport { Utils } from './../utils/utils';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule, ErrorHandler } from '@angular/core';\nimport { IonicApp, IonicModule, IonicErrorHandler } from 'ionic-angular';\nimport { MyApp } from './app.component';\nimport { HelloIonicPage } from '../pages/hello-ionic/hello-ionic';\nimport { SecretDetailsPage } from '../pages/secret-details/secret-details';\nimport { EditSecretPage } from '../pages/edit-secret/edit-secret';\nimport { ListPage } from '../pages/list/list';\nimport { LoginPage } from '../pages/login/login';\nimport { LogoutPage } from '../pages/logout/logout';\nimport { ProfilePage } from '../pages/profile/profile';\nimport { HttpInterceptor } from '../providers/http/http-interceptor';\nimport { IonicStorageModule } from '@ionic/storage';\n\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\n\n@NgModule({\n  declarations: [\n    MyApp,\n    HelloIonicPage,\n    SecretDetailsPage,\n    EditSecretPage,\n    ListPage,\n    LoginPage,\n    LogoutPage,\n    ProfilePage\n\n  ],\n  imports: [\n    BrowserModule,\n    HttpModule,\n    IonicModule.forRoot(MyApp),\n    IonicStorageModule.forRoot()\n  ],\n  bootstrap: [IonicApp],\n  entryComponents: [\n    MyApp,\n    HelloIonicPage,\n    SecretDetailsPage,\n    EditSecretPage,\n    ListPage,\n    LoginPage,\n    LogoutPage,\n    ProfilePage\n  ],\n  providers: [\n    StatusBar,\n    SplashScreen,\n    {provide: ErrorHandler, useClass: IonicErrorHandler},    \n    AuthService,\n    DefaultApi,\n    Utils\n  ]\n})\nexport class AppModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { InjectionToken } from '@angular/core';\n\nexport const BASE_PATH = new InjectionToken('basePath');\nexport const COLLECTION_FORMATS = {\n    'csv': ',',\n    'tsv': '   ',\n    'ssv': ' ',\n    'pipes': '|'\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/variables.ts","import { Component, ViewChild } from '@angular/core';\n\nimport { Platform, MenuController, Nav } from 'ionic-angular';\n\n//import { HelloIonicPage } from '../pages/hello-ionic/hello-ionic';\n//import { ListPage } from '../pages/list/list';\nimport { LoginPage } from '../pages/login/login';\nimport { LogoutPage } from '../pages/logout/logout';\nimport { HomePage } from '../pages/home/home';\nimport { ProfilePage } from '../pages/profile/profile';\n\n\nimport { StatusBar } from '@ionic-native/status-bar';\nimport { SplashScreen } from '@ionic-native/splash-screen';\n\n\n@Component({\n  templateUrl: 'app.html'\n})\nexport class MyApp {\n  @ViewChild(Nav) nav: Nav;\n\n  // make LoginPage the root (or first) page\n  rootPage = LoginPage;\n  pages: Array<{title: string, component: any}>;\n\n  constructor(\n    public platform: Platform,\n    public menu: MenuController,\n    public statusBar: StatusBar,\n    public splashScreen: SplashScreen\n  ) {\n    this.initializeApp();\n\n    // set our app's pages\n    this.pages = [\n      //{ title: 'Hello Ionic', component: HelloIonicPage },\n      //{ title: 'My First List', component: ListPage },\n      { title: 'Home', component: HomePage },\n      { title: 'Profile', component: ProfilePage },\n      { title: 'Logout', component: LogoutPage }\n    ];\n  }\n\n  initializeApp() {\n    this.platform.ready().then(() => {\n      // Okay, so the platform is ready and our plugins are available.\n      // Here you can do any higher level native things you might need.\n      this.statusBar.styleDefault();\n      this.splashScreen.hide();\n    });\n  }\n\n  openPage(page) {\n    // close the menu when clicking a link from the menu\n    this.menu.close();\n    // navigate to the new page if it is not the current page\n    if (page.title == 'Logout') {\n      // code...\n      this.nav.setRoot(this.rootPage);\n    } else {\n      this.nav.setRoot(page.component);\n    }\n    \n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'page-hello-ionic',\n  templateUrl: 'hello-ionic.html'\n})\nexport class HelloIonicPage {\n  constructor() {\n\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/hello-ionic/hello-ionic.ts","import { Component } from '@angular/core';\n\nimport { NavController, NavParams } from 'ionic-angular';\n\nimport { SecretDetailsPage } from '../secret-details/secret-details';\n\n@Component({\n  selector: 'page-list',\n  templateUrl: 'list.html'\n})\nexport class ListPage {\n  icons: string[];\n  items: Array<{title: string, note: string, icon: string}>;\n\n  constructor(public navCtrl: NavController, public navParams: NavParams) {\n    this.icons = ['flask', 'wifi', 'beer', 'football', 'basketball', 'paper-plane',\n    'american-football', 'boat', 'bluetooth', 'build'];\n\n    this.items = [];\n    for(let i = 1; i < 11; i++) {\n      this.items.push({\n        title: 'Item ' + i,\n        note: 'This is item #' + i,\n        icon: this.icons[Math.floor(Math.random() * this.icons.length)]\n      });\n    }\n  }\n\n  itemTapped(event, item) {\n    this.navCtrl.push(SecretDetailsPage, {\n      item: item\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/list/list.ts","/**\n * secret\n * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)\n *\n * OpenAPI spec version: 2017-02-05T01:28:32Z\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { Http, Headers, URLSearchParams }                    from '@angular/http';\nimport { RequestMethod, RequestOptions, RequestOptionsArgs } from '@angular/http';\nimport { Response, ResponseContentType }                     from '@angular/http';\n\nimport { Observable }                                        from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\n\nimport * as models                                           from '../model/models';\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\n\n\n@Injectable()\nexport class DefaultApi {\n\n    protected basePath = 'https://dyfq02qhr1.execute-api.us-east-1.amazonaws.com/dev';\n    public defaultHeaders: Headers = new Headers();\n    public configuration: Configuration = new Configuration();\n\n    constructor(protected http: Http, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (basePath) {\n            this.basePath = basePath;\n        }\n        if (configuration) {\n            this.configuration = configuration;\n        }\n    }\n\n    /**\n     * \n     */\n    public activateOptions(extraHttpRequestParams?: any): Observable<{}> {\n        return this.activateOptionsWithHttpInfo(extraHttpRequestParams)\n            .map((response: Response) => {\n                if (response.status === 204) {\n                    return undefined;\n                } else {\n                    return response.json() || {};\n                }\n            });\n    }\n\n    /**\n     * \n     * @param activateUserRequest \n     */\n    public activatePost(activateUserRequest: models.ActivateUserRequest, extraHttpRequestParams?: any): Observable<models.UserResponse> {\n        return this.activatePostWithHttpInfo(activateUserRequest, extraHttpRequestParams)\n            .map((response: Response) => {\n                if (response.status === 204) {\n                    return undefined;\n                } else {\n                    return response.json() || {};\n                }\n            });\n    }\n\n    /**\n     * \n     */\n    public loginOptions(extraHttpRequestParams?: any): Observable<{}> {\n        return this.loginOptionsWithHttpInfo(extraHttpRequestParams)\n            .map((response: Response) => {\n                if (response.status === 204) {\n                    return undefined;\n                } else {\n                    return response.json() || {};\n                }\n            });\n    }\n\n    /**\n     * \n     * @param loginUserRequest \n     */\n    public loginPost(loginUserRequest: models.LoginUserRequest, extraHttpRequestParams?: any): Observable<models.LoginUserResponse> {\n        return this.loginPostWithHttpInfo(loginUserRequest, extraHttpRequestParams)\n            .map((response: Response) => {\n                if (response.status === 204) {\n                    return undefined;\n                } else {\n                    return response.json() || {};\n                }\n            });\n    }\n\n    /**\n     * \n     */\n    public logoutOptions(extraHttpRequestParams?: any): Observable<{}> {\n        return this.logoutOptionsWithHttpInfo(extraHttpRequestParams)\n            .map((response: Response) => {\n                if (response.status === 204) {\n                    return undefined;\n                } else {\n                    return response.json() || {};\n                }\n            });\n    }\n\n    /**\n     * \n     * @param logoutRequest \n     */\n    public logoutPost(logoutRequest: models.LogoutRequest, extraHttpRequestParams?: any): Observable<models.LogoutResponse> {\n        return this.logoutPostWithHttpInfo(logoutRequest, extraHttpRequestParams)\n            .map((response: Response) => {\n                if (response.status === 204) {\n                    return undefined;\n                } else {\n                    return response.json() || {};\n                }\n            });\n    }\n\n    /**\n     * \n     */\n    public registerOptions(extraHttpRequestParams?: any): Observable<{}> {\n        return this.registerOptionsWithHttpInfo(extraHttpRequestParams)\n            .map((response: Response) => {\n                if (response.status === 204) {\n                    return undefined;\n                } else {\n                    return response.json() || {};\n                }\n            });\n    }\n\n    /**\n     * \n     * @param registerUserRequest \n     */\n    public registerPost(registerUserRequest: models.RegisterUserRequest, extraHttpRequestParams?: any): Observable<models.RegisterUserResponse> {\n        return this.registerPostWithHttpInfo(registerUserRequest, extraHttpRequestParams)\n            .map((response: Response) => {\n                if (response.status === 204) {\n                    return undefined;\n                } else {\n                    return response.json() || {};\n                }\n            });\n    }\n\n    /**\n     * \n     * @param id \n     */\n    public secretsIdDelete(id: string, extraHttpRequestParams?: any): Observable<models.SecretResponse> {\n        return this.secretsIdDeleteWithHttpInfo(id, extraHttpRequestParams)\n            .map((response: Response) => {\n                if (response.status === 204) {\n                    return undefined;\n                } else {\n                    return response.json() || {};\n                }\n            });\n    }\n\n    /**\n     * \n     * @param id \n     */\n    public secretsIdGet(id: string, extraHttpRequestParams?: any): Observable<models.SecretResponse> {\n        return this.secretsIdGetWithHttpInfo(id, extraHttpRequestParams)\n            .map((response: Response) => {\n                if (response.status === 204) {\n                    return undefined;\n                } else {\n                    return response.json() || {};\n                }\n            });\n    }\n\n    /**\n     * \n     * @param id \n     */\n    public secretsIdOptions(id: string, extraHttpRequestParams?: any): Observable<{}> {\n        return this.secretsIdOptionsWithHttpInfo(id, extraHttpRequestParams)\n            .map((response: Response) => {\n                if (response.status === 204) {\n                    return undefined;\n                } else {\n                    return response.json() || {};\n                }\n            });\n    }\n\n    /**\n     * \n     * @param id \n     * @param updateSecretRequest \n     */\n    public secretsIdPut(id: string, updateSecretRequest: models.UpdateSecretRequest, extraHttpRequestParams?: any): Observable<models.SecretResponse> {\n        return this.secretsIdPutWithHttpInfo(id, updateSecretRequest, extraHttpRequestParams)\n            .map((response: Response) => {\n                if (response.status === 204) {\n                    return undefined;\n                } else {\n                    return response.json() || {};\n                }\n            });\n    }\n\n    /**\n     * \n     */\n    public secretsOptions(extraHttpRequestParams?: any): Observable<{}> {\n        return this.secretsOptionsWithHttpInfo(extraHttpRequestParams)\n            .map((response: Response) => {\n                if (response.status === 204) {\n                    return undefined;\n                } else {\n                    return response.json() || {};\n                }\n            });\n    }\n\n    /**\n     * \n     * @param insertSecretRequest \n     */\n    public secretsPost(insertSecretRequest: models.InsertSecretRequest, extraHttpRequestParams?: any): Observable<models.SecretResponse> {\n        return this.secretsPostWithHttpInfo(insertSecretRequest, extraHttpRequestParams)\n            .map((response: Response) => {\n                if (response.status === 204) {\n                    return undefined;\n                } else {\n                    return response.json() || {};\n                }\n            });\n    }\n\n    /**\n     * \n     * @param query \n     * @param limit \n     * @param cursor \n     */\n    public secretsSearchGet(query: string, limit: string, cursor?: string, extraHttpRequestParams?: any): Observable<models.SearchSecretResponse> {\n        return this.secretsSearchGetWithHttpInfo(query, limit, cursor, extraHttpRequestParams)\n            .map((response: Response) => {\n                if (response.status === 204) {\n                    return undefined;\n                } else {\n                    return response.json() || {};\n                }\n            });\n    }\n\n    /**\n     * \n     */\n    public secretsSearchOptions(extraHttpRequestParams?: any): Observable<{}> {\n        return this.secretsSearchOptionsWithHttpInfo(extraHttpRequestParams)\n            .map((response: Response) => {\n                if (response.status === 204) {\n                    return undefined;\n                } else {\n                    return response.json() || {};\n                }\n            });\n    }\n\n    /**\n     * \n     */\n    public usersChangepasswordOptions(extraHttpRequestParams?: any): Observable<{}> {\n        return this.usersChangepasswordOptionsWithHttpInfo(extraHttpRequestParams)\n            .map((response: Response) => {\n                if (response.status === 204) {\n                    return undefined;\n                } else {\n                    return response.json() || {};\n                }\n            });\n    }\n\n    /**\n     * \n     * @param changePasswordRequest \n     */\n    public usersChangepasswordPost(changePasswordRequest: models.ChangePasswordRequest, extraHttpRequestParams?: any): Observable<models.LoginUserResponse> {\n        return this.usersChangepasswordPostWithHttpInfo(changePasswordRequest, extraHttpRequestParams)\n            .map((response: Response) => {\n                if (response.status === 204) {\n                    return undefined;\n                } else {\n                    return response.json() || {};\n                }\n            });\n    }\n\n    /**\n     * \n     */\n    public usersForgetpasswordOptions(extraHttpRequestParams?: any): Observable<{}> {\n        return this.usersForgetpasswordOptionsWithHttpInfo(extraHttpRequestParams)\n            .map((response: Response) => {\n                if (response.status === 204) {\n                    return undefined;\n                } else {\n                    return response.json() || {};\n                }\n            });\n    }\n\n    /**\n     * \n     * @param fogotPasswordRequest \n     */\n    public usersForgetpasswordPost(fogotPasswordRequest: models.FogotPasswordRequest, extraHttpRequestParams?: any): Observable<models.UserResponse> {\n        return this.usersForgetpasswordPostWithHttpInfo(fogotPasswordRequest, extraHttpRequestParams)\n            .map((response: Response) => {\n                if (response.status === 204) {\n                    return undefined;\n                } else {\n                    return response.json() || {};\n                }\n            });\n    }\n\n    /**\n     * \n     * @param id \n     */\n    public usersIdDelete(id: string, extraHttpRequestParams?: any): Observable<models.UserResponse> {\n        return this.usersIdDeleteWithHttpInfo(id, extraHttpRequestParams)\n            .map((response: Response) => {\n                if (response.status === 204) {\n                    return undefined;\n                } else {\n                    return response.json() || {};\n                }\n            });\n    }\n\n    /**\n     * \n     * @param id \n     */\n    public usersIdGet(id: string, extraHttpRequestParams?: any): Observable<models.UserResponse> {\n        return this.usersIdGetWithHttpInfo(id, extraHttpRequestParams)\n            .map((response: Response) => {\n                if (response.status === 204) {\n                    return undefined;\n                } else {\n                    return response.json() || {};\n                }\n            });\n    }\n\n    /**\n     * \n     * @param id \n     */\n    public usersIdOptions(id: string, extraHttpRequestParams?: any): Observable<{}> {\n        return this.usersIdOptionsWithHttpInfo(id, extraHttpRequestParams)\n            .map((response: Response) => {\n                if (response.status === 204) {\n                    return undefined;\n                } else {\n                    return response.json() || {};\n                }\n            });\n    }\n\n    /**\n     * \n     * @param id \n     * @param updateUserRequest \n     */\n    public usersIdPut(id: string, updateUserRequest: models.UpdateUserRequest, extraHttpRequestParams?: any): Observable<models.UserResponse> {\n        return this.usersIdPutWithHttpInfo(id, updateUserRequest, extraHttpRequestParams)\n            .map((response: Response) => {\n                if (response.status === 204) {\n                    return undefined;\n                } else {\n                    return response.json() || {};\n                }\n            });\n    }\n\n    /**\n     * \n     */\n    public usersLoginwithfacebookOptions(extraHttpRequestParams?: any): Observable<{}> {\n        return this.usersLoginwithfacebookOptionsWithHttpInfo(extraHttpRequestParams)\n            .map((response: Response) => {\n                if (response.status === 204) {\n                    return undefined;\n                } else {\n                    return response.json() || {};\n                }\n            });\n    }\n\n    /**\n     * \n     * @param loginWithTokenRequest \n     */\n    public usersLoginwithfacebookPost(loginWithTokenRequest: models.LoginWithTokenRequest, extraHttpRequestParams?: any): Observable<models.LoginUserResponse> {\n        return this.usersLoginwithfacebookPostWithHttpInfo(loginWithTokenRequest, extraHttpRequestParams)\n            .map((response: Response) => {\n                if (response.status === 204) {\n                    return undefined;\n                } else {\n                    return response.json() || {};\n                }\n            });\n    }\n\n    /**\n     * \n     */\n    public usersLoginwithgoogleOptions(extraHttpRequestParams?: any): Observable<{}> {\n        return this.usersLoginwithgoogleOptionsWithHttpInfo(extraHttpRequestParams)\n            .map((response: Response) => {\n                if (response.status === 204) {\n                    return undefined;\n                } else {\n                    return response.json() || {};\n                }\n            });\n    }\n\n    /**\n     * \n     * @param loginWithTokenRequest \n     */\n    public usersLoginwithgooglePost(loginWithTokenRequest: models.LoginWithTokenRequest, extraHttpRequestParams?: any): Observable<models.LoginUserResponse> {\n        return this.usersLoginwithgooglePostWithHttpInfo(loginWithTokenRequest, extraHttpRequestParams)\n            .map((response: Response) => {\n                if (response.status === 204) {\n                    return undefined;\n                } else {\n                    return response.json() || {};\n                }\n            });\n    }\n\n    /**\n     * \n     */\n    public usersUpdatesecretkeyOptions(extraHttpRequestParams?: any): Observable<{}> {\n        return this.usersUpdatesecretkeyOptionsWithHttpInfo(extraHttpRequestParams)\n            .map((response: Response) => {\n                if (response.status === 204) {\n                    return undefined;\n                } else {\n                    return response.json() || {};\n                }\n            });\n    }\n\n    /**\n     * \n     * @param updateSecretKeyRequest \n     */\n    public usersUpdatesecretkeyPost(updateSecretKeyRequest: models.UpdateSecretKeyRequest, extraHttpRequestParams?: any): Observable<models.UpdateSecretKeyRequest> {\n        return this.usersUpdatesecretkeyPostWithHttpInfo(updateSecretKeyRequest, extraHttpRequestParams)\n            .map((response: Response) => {\n                if (response.status === 204) {\n                    return undefined;\n                } else {\n                    return response.json() || {};\n                }\n            });\n    }\n\n\n    /**\n     * \n     * \n     */\n    public activateOptionsWithHttpInfo(extraHttpRequestParams?: any): Observable<Response> {\n        const path = this.basePath + '/activate';\n\n        let queryParameters = new URLSearchParams();\n        let headers = new Headers(this.defaultHeaders.toJSON()); // https://github.com/angular/angular/issues/6845\n        // to determine the Content-Type header\n        let consumes: string[] = [\n            'application/json'\n        ];\n\n        // to determine the Accept header\n        let produces: string[] = [\n            'application/json'\n        ];\n\n        let requestOptions: RequestOptionsArgs = new RequestOptions({\n            method: RequestMethod.Options,\n            headers: headers,\n            search: queryParameters,\n            withCredentials:this.configuration.withCredentials\n        });\n        // https://github.com/swagger-api/swagger-codegen/issues/4037\n        if (extraHttpRequestParams) {\n            requestOptions = (<any>Object).assign(requestOptions, extraHttpRequestParams);\n        }\n\n        return this.http.request(path, requestOptions);\n    }\n\n    /**\n     * \n     * \n     * @param activateUserRequest \n     */\n    public activatePostWithHttpInfo(activateUserRequest: models.ActivateUserRequest, extraHttpRequestParams?: any): Observable<Response> {\n        const path = this.basePath + '/activate';\n\n        let queryParameters = new URLSearchParams();\n        let headers = new Headers(this.defaultHeaders.toJSON()); // https://github.com/angular/angular/issues/6845\n        // verify required parameter 'activateUserRequest' is not null or undefined\n        if (activateUserRequest === null || activateUserRequest === undefined) {\n            throw new Error('Required parameter activateUserRequest was null or undefined when calling activatePost.');\n        }\n        // to determine the Content-Type header\n        let consumes: string[] = [\n            'application/json'\n        ];\n\n        // to determine the Accept header\n        let produces: string[] = [\n            'application/json'\n        ];\n\n        headers.set('Content-Type', 'application/json');\n\n        let requestOptions: RequestOptionsArgs = new RequestOptions({\n            method: RequestMethod.Post,\n            headers: headers,\n            body: activateUserRequest == null ? '' : JSON.stringify(activateUserRequest), // https://github.com/angular/angular/issues/10612\n            search: queryParameters,\n            withCredentials:this.configuration.withCredentials\n        });\n        // https://github.com/swagger-api/swagger-codegen/issues/4037\n        if (extraHttpRequestParams) {\n            requestOptions = (<any>Object).assign(requestOptions, extraHttpRequestParams);\n        }\n\n        return this.http.request(path, requestOptions);\n    }\n\n    /**\n     * \n     * \n     */\n    public loginOptionsWithHttpInfo(extraHttpRequestParams?: any): Observable<Response> {\n        const path = this.basePath + '/login';\n\n        let queryParameters = new URLSearchParams();\n        let headers = new Headers(this.defaultHeaders.toJSON()); // https://github.com/angular/angular/issues/6845\n        // to determine the Content-Type header\n        let consumes: string[] = [\n            'application/json'\n        ];\n\n        // to determine the Accept header\n        let produces: string[] = [\n            'application/json'\n        ];\n\n        let requestOptions: RequestOptionsArgs = new RequestOptions({\n            method: RequestMethod.Options,\n            headers: headers,\n            search: queryParameters,\n            withCredentials:this.configuration.withCredentials\n        });\n        // https://github.com/swagger-api/swagger-codegen/issues/4037\n        if (extraHttpRequestParams) {\n            requestOptions = (<any>Object).assign(requestOptions, extraHttpRequestParams);\n        }\n\n        return this.http.request(path, requestOptions);\n    }\n\n    /**\n     * \n     * \n     * @param loginUserRequest \n     */\n    public loginPostWithHttpInfo(loginUserRequest: models.LoginUserRequest, extraHttpRequestParams?: any): Observable<Response> {\n        const path = this.basePath + '/login';\n\n        let queryParameters = new URLSearchParams();\n        let headers = new Headers(this.defaultHeaders.toJSON()); // https://github.com/angular/angular/issues/6845\n        // verify required parameter 'loginUserRequest' is not null or undefined\n        if (loginUserRequest === null || loginUserRequest === undefined) {\n            throw new Error('Required parameter loginUserRequest was null or undefined when calling loginPost.');\n        }\n        // to determine the Content-Type header\n        let consumes: string[] = [\n            'application/json'\n        ];\n\n        // to determine the Accept header\n        let produces: string[] = [\n            'application/json'\n        ];\n\n        headers.set('Content-Type', 'application/json');\n\n        let requestOptions: RequestOptionsArgs = new RequestOptions({\n            method: RequestMethod.Post,\n            headers: headers,\n            body: loginUserRequest == null ? '' : JSON.stringify(loginUserRequest), // https://github.com/angular/angular/issues/10612\n            search: queryParameters,\n            withCredentials:this.configuration.withCredentials\n        });\n        // https://github.com/swagger-api/swagger-codegen/issues/4037\n        if (extraHttpRequestParams) {\n            requestOptions = (<any>Object).assign(requestOptions, extraHttpRequestParams);\n        }\n\n        return this.http.request(path, requestOptions);\n    }\n\n    /**\n     * \n     * \n     */\n    public logoutOptionsWithHttpInfo(extraHttpRequestParams?: any): Observable<Response> {\n        const path = this.basePath + '/logout';\n\n        let queryParameters = new URLSearchParams();\n        let headers = new Headers(this.defaultHeaders.toJSON()); // https://github.com/angular/angular/issues/6845\n        // to determine the Content-Type header\n        let consumes: string[] = [\n            'application/json'\n        ];\n\n        // to determine the Accept header\n        let produces: string[] = [\n            'application/json'\n        ];\n\n        let requestOptions: RequestOptionsArgs = new RequestOptions({\n            method: RequestMethod.Options,\n            headers: headers,\n            search: queryParameters,\n            withCredentials:this.configuration.withCredentials\n        });\n        // https://github.com/swagger-api/swagger-codegen/issues/4037\n        if (extraHttpRequestParams) {\n            requestOptions = (<any>Object).assign(requestOptions, extraHttpRequestParams);\n        }\n\n        return this.http.request(path, requestOptions);\n    }\n\n    /**\n     * \n     * \n     * @param logoutRequest \n     */\n    public logoutPostWithHttpInfo(logoutRequest: models.LogoutRequest, extraHttpRequestParams?: any): Observable<Response> {\n        const path = this.basePath + '/logout';\n\n        let queryParameters = new URLSearchParams();\n        let headers = new Headers(this.defaultHeaders.toJSON()); // https://github.com/angular/angular/issues/6845\n        // verify required parameter 'logoutRequest' is not null or undefined\n        if (logoutRequest === null || logoutRequest === undefined) {\n            throw new Error('Required parameter logoutRequest was null or undefined when calling logoutPost.');\n        }\n        // to determine the Content-Type header\n        let consumes: string[] = [\n            'application/json'\n        ];\n\n        // to determine the Accept header\n        let produces: string[] = [\n            'application/json'\n        ];\n\n        // authentication (secretAuthorizer2) required\n        if (this.configuration.apiKey) {\n            headers.set('Authorization', this.configuration.apiKey);\n        }\n\n        headers.set('Content-Type', 'application/json');\n\n        let requestOptions: RequestOptionsArgs = new RequestOptions({\n            method: RequestMethod.Post,\n            headers: headers,\n            body: logoutRequest == null ? '' : JSON.stringify(logoutRequest), // https://github.com/angular/angular/issues/10612\n            search: queryParameters,\n            withCredentials:this.configuration.withCredentials\n        });\n        // https://github.com/swagger-api/swagger-codegen/issues/4037\n        if (extraHttpRequestParams) {\n            requestOptions = (<any>Object).assign(requestOptions, extraHttpRequestParams);\n        }\n\n        return this.http.request(path, requestOptions);\n    }\n\n    /**\n     * \n     * \n     */\n    public registerOptionsWithHttpInfo(extraHttpRequestParams?: any): Observable<Response> {\n        const path = this.basePath + '/register';\n\n        let queryParameters = new URLSearchParams();\n        let headers = new Headers(this.defaultHeaders.toJSON()); // https://github.com/angular/angular/issues/6845\n        // to determine the Content-Type header\n        let consumes: string[] = [\n            'application/json'\n        ];\n\n        // to determine the Accept header\n        let produces: string[] = [\n            'application/json'\n        ];\n\n        let requestOptions: RequestOptionsArgs = new RequestOptions({\n            method: RequestMethod.Options,\n            headers: headers,\n            search: queryParameters,\n            withCredentials:this.configuration.withCredentials\n        });\n        // https://github.com/swagger-api/swagger-codegen/issues/4037\n        if (extraHttpRequestParams) {\n            requestOptions = (<any>Object).assign(requestOptions, extraHttpRequestParams);\n        }\n\n        return this.http.request(path, requestOptions);\n    }\n\n    /**\n     * \n     * \n     * @param registerUserRequest \n     */\n    public registerPostWithHttpInfo(registerUserRequest: models.RegisterUserRequest, extraHttpRequestParams?: any): Observable<Response> {\n        const path = this.basePath + '/register';\n\n        let queryParameters = new URLSearchParams();\n        let headers = new Headers(this.defaultHeaders.toJSON()); // https://github.com/angular/angular/issues/6845\n        // verify required parameter 'registerUserRequest' is not null or undefined\n        if (registerUserRequest === null || registerUserRequest === undefined) {\n            throw new Error('Required parameter registerUserRequest was null or undefined when calling registerPost.');\n        }\n        // to determine the Content-Type header\n        let consumes: string[] = [\n            'application/json'\n        ];\n\n        // to determine the Accept header\n        let produces: string[] = [\n            'application/json'\n        ];\n\n        headers.set('Content-Type', 'application/json');\n\n        let requestOptions: RequestOptionsArgs = new RequestOptions({\n            method: RequestMethod.Post,\n            headers: headers,\n            body: registerUserRequest == null ? '' : JSON.stringify(registerUserRequest), // https://github.com/angular/angular/issues/10612\n            search: queryParameters,\n            withCredentials:this.configuration.withCredentials\n        });\n        // https://github.com/swagger-api/swagger-codegen/issues/4037\n        if (extraHttpRequestParams) {\n            requestOptions = (<any>Object).assign(requestOptions, extraHttpRequestParams);\n        }\n\n        return this.http.request(path, requestOptions);\n    }\n\n    /**\n     * \n     * \n     * @param id \n     */\n    public secretsIdDeleteWithHttpInfo(id: string, extraHttpRequestParams?: any): Observable<Response> {\n        const path = this.basePath + '/secrets/${id}'\n                    .replace('${' + 'id' + '}', String(id));\n\n        let queryParameters = new URLSearchParams();\n        let headers = new Headers(this.defaultHeaders.toJSON()); // https://github.com/angular/angular/issues/6845\n        // verify required parameter 'id' is not null or undefined\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling secretsIdDelete.');\n        }\n        // to determine the Content-Type header\n        let consumes: string[] = [\n            'application/json'\n        ];\n\n        // to determine the Accept header\n        let produces: string[] = [\n            'application/json'\n        ];\n\n        // authentication (secretAuthorizer2) required\n        if (this.configuration.apiKey) {\n            headers.set('Authorization', this.configuration.apiKey);\n        }\n\n        let requestOptions: RequestOptionsArgs = new RequestOptions({\n            method: RequestMethod.Delete,\n            headers: headers,\n            search: queryParameters,\n            withCredentials:this.configuration.withCredentials\n        });\n        // https://github.com/swagger-api/swagger-codegen/issues/4037\n        if (extraHttpRequestParams) {\n            requestOptions = (<any>Object).assign(requestOptions, extraHttpRequestParams);\n        }\n\n        return this.http.request(path, requestOptions);\n    }\n\n    /**\n     * \n     * \n     * @param id \n     */\n    public secretsIdGetWithHttpInfo(id: string, extraHttpRequestParams?: any): Observable<Response> {\n        const path = this.basePath + '/secrets/${id}'\n                    .replace('${' + 'id' + '}', String(id));\n\n        let queryParameters = new URLSearchParams();\n        let headers = new Headers(this.defaultHeaders.toJSON()); // https://github.com/angular/angular/issues/6845\n        // verify required parameter 'id' is not null or undefined\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling secretsIdGet.');\n        }\n        // to determine the Content-Type header\n        let consumes: string[] = [\n            'application/json'\n        ];\n\n        // to determine the Accept header\n        let produces: string[] = [\n            'application/json'\n        ];\n\n        // authentication (secretAuthorizer2) required\n        if (this.configuration.apiKey) {\n            headers.set('Authorization', this.configuration.apiKey);\n        }\n\n        let requestOptions: RequestOptionsArgs = new RequestOptions({\n            method: RequestMethod.Get,\n            headers: headers,\n            search: queryParameters,\n            withCredentials:this.configuration.withCredentials\n        });\n        // https://github.com/swagger-api/swagger-codegen/issues/4037\n        if (extraHttpRequestParams) {\n            requestOptions = (<any>Object).assign(requestOptions, extraHttpRequestParams);\n        }\n\n        return this.http.request(path, requestOptions);\n    }\n\n    /**\n     * \n     * \n     * @param id \n     */\n    public secretsIdOptionsWithHttpInfo(id: string, extraHttpRequestParams?: any): Observable<Response> {\n        const path = this.basePath + '/secrets/${id}'\n                    .replace('${' + 'id' + '}', String(id));\n\n        let queryParameters = new URLSearchParams();\n        let headers = new Headers(this.defaultHeaders.toJSON()); // https://github.com/angular/angular/issues/6845\n        // verify required parameter 'id' is not null or undefined\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling secretsIdOptions.');\n        }\n        // to determine the Content-Type header\n        let consumes: string[] = [\n            'application/json'\n        ];\n\n        // to determine the Accept header\n        let produces: string[] = [\n            'application/json'\n        ];\n\n        let requestOptions: RequestOptionsArgs = new RequestOptions({\n            method: RequestMethod.Options,\n            headers: headers,\n            search: queryParameters,\n            withCredentials:this.configuration.withCredentials\n        });\n        // https://github.com/swagger-api/swagger-codegen/issues/4037\n        if (extraHttpRequestParams) {\n            requestOptions = (<any>Object).assign(requestOptions, extraHttpRequestParams);\n        }\n\n        return this.http.request(path, requestOptions);\n    }\n\n    /**\n     * \n     * \n     * @param id \n     * @param updateSecretRequest \n     */\n    public secretsIdPutWithHttpInfo(id: string, updateSecretRequest: models.UpdateSecretRequest, extraHttpRequestParams?: any): Observable<Response> {\n        const path = this.basePath + '/secrets/${id}'\n                    .replace('${' + 'id' + '}', String(id));\n\n        let queryParameters = new URLSearchParams();\n        let headers = new Headers(this.defaultHeaders.toJSON()); // https://github.com/angular/angular/issues/6845\n        // verify required parameter 'id' is not null or undefined\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling secretsIdPut.');\n        }\n        // verify required parameter 'updateSecretRequest' is not null or undefined\n        if (updateSecretRequest === null || updateSecretRequest === undefined) {\n            throw new Error('Required parameter updateSecretRequest was null or undefined when calling secretsIdPut.');\n        }\n        // to determine the Content-Type header\n        let consumes: string[] = [\n            'application/json'\n        ];\n\n        // to determine the Accept header\n        let produces: string[] = [\n            'application/json'\n        ];\n\n        // authentication (secretAuthorizer2) required\n        if (this.configuration.apiKey) {\n            headers.set('Authorization', this.configuration.apiKey);\n        }\n\n        headers.set('Content-Type', 'application/json');\n\n        let requestOptions: RequestOptionsArgs = new RequestOptions({\n            method: RequestMethod.Put,\n            headers: headers,\n            body: updateSecretRequest == null ? '' : JSON.stringify(updateSecretRequest), // https://github.com/angular/angular/issues/10612\n            search: queryParameters,\n            withCredentials:this.configuration.withCredentials\n        });\n        // https://github.com/swagger-api/swagger-codegen/issues/4037\n        if (extraHttpRequestParams) {\n            requestOptions = (<any>Object).assign(requestOptions, extraHttpRequestParams);\n        }\n\n        return this.http.request(path, requestOptions);\n    }\n\n    /**\n     * \n     * \n     */\n    public secretsOptionsWithHttpInfo(extraHttpRequestParams?: any): Observable<Response> {\n        const path = this.basePath + '/secrets';\n\n        let queryParameters = new URLSearchParams();\n        let headers = new Headers(this.defaultHeaders.toJSON()); // https://github.com/angular/angular/issues/6845\n        // to determine the Content-Type header\n        let consumes: string[] = [\n            'application/json'\n        ];\n\n        // to determine the Accept header\n        let produces: string[] = [\n            'application/json'\n        ];\n\n        let requestOptions: RequestOptionsArgs = new RequestOptions({\n            method: RequestMethod.Options,\n            headers: headers,\n            search: queryParameters,\n            withCredentials:this.configuration.withCredentials\n        });\n        // https://github.com/swagger-api/swagger-codegen/issues/4037\n        if (extraHttpRequestParams) {\n            requestOptions = (<any>Object).assign(requestOptions, extraHttpRequestParams);\n        }\n\n        return this.http.request(path, requestOptions);\n    }\n\n    /**\n     * \n     * \n     * @param insertSecretRequest \n     */\n    public secretsPostWithHttpInfo(insertSecretRequest: models.InsertSecretRequest, extraHttpRequestParams?: any): Observable<Response> {\n        const path = this.basePath + '/secrets';\n\n        let queryParameters = new URLSearchParams();\n        let headers = new Headers(this.defaultHeaders.toJSON()); // https://github.com/angular/angular/issues/6845\n        // verify required parameter 'insertSecretRequest' is not null or undefined\n        if (insertSecretRequest === null || insertSecretRequest === undefined) {\n            throw new Error('Required parameter insertSecretRequest was null or undefined when calling secretsPost.');\n        }\n        // to determine the Content-Type header\n        let consumes: string[] = [\n            'application/json'\n        ];\n\n        // to determine the Accept header\n        let produces: string[] = [\n            'application/json'\n        ];\n\n        // authentication (secretAuthorizer2) required\n        if (this.configuration.apiKey) {\n            headers.set('Authorization', this.configuration.apiKey);\n        }\n\n        headers.set('Content-Type', 'application/json');\n\n        let requestOptions: RequestOptionsArgs = new RequestOptions({\n            method: RequestMethod.Post,\n            headers: headers,\n            body: insertSecretRequest == null ? '' : JSON.stringify(insertSecretRequest), // https://github.com/angular/angular/issues/10612\n            search: queryParameters,\n            withCredentials:this.configuration.withCredentials\n        });\n        // https://github.com/swagger-api/swagger-codegen/issues/4037\n        if (extraHttpRequestParams) {\n            requestOptions = (<any>Object).assign(requestOptions, extraHttpRequestParams);\n        }\n\n        return this.http.request(path, requestOptions);\n    }\n\n    /**\n     * \n     * \n     * @param query \n     * @param limit \n     * @param cursor \n     */\n    public secretsSearchGetWithHttpInfo(query: string, limit: string, cursor?: string, extraHttpRequestParams?: any): Observable<Response> {\n        const path = this.basePath + '/secrets/search';\n\n        let queryParameters = new URLSearchParams();\n        let headers = new Headers(this.defaultHeaders.toJSON()); // https://github.com/angular/angular/issues/6845\n        // verify required parameter 'query' is not null or undefined\n        if (query === null || query === undefined) {\n            throw new Error('Required parameter query was null or undefined when calling secretsSearchGet.');\n        }\n        // verify required parameter 'limit' is not null or undefined\n        if (limit === null || limit === undefined) {\n            throw new Error('Required parameter limit was null or undefined when calling secretsSearchGet.');\n        }\n        if (query !== undefined) {\n            queryParameters.set('query', <any>query);\n        }\n\n        if (cursor !== undefined) {\n            queryParameters.set('cursor', <any>cursor);\n        }\n\n        if (limit !== undefined) {\n            queryParameters.set('limit', <any>limit);\n        }\n\n        // to determine the Content-Type header\n        let consumes: string[] = [\n            'application/json'\n        ];\n\n        // to determine the Accept header\n        let produces: string[] = [\n            'application/json'\n        ];\n\n        // authentication (secretAuthorizer2) required\n        if (this.configuration.apiKey) {\n            headers.set('Authorization', this.configuration.apiKey);\n        }\n\n        let requestOptions: RequestOptionsArgs = new RequestOptions({\n            method: RequestMethod.Get,\n            headers: headers,\n            search: queryParameters,\n            withCredentials:this.configuration.withCredentials\n        });\n        // https://github.com/swagger-api/swagger-codegen/issues/4037\n        if (extraHttpRequestParams) {\n            requestOptions = (<any>Object).assign(requestOptions, extraHttpRequestParams);\n        }\n\n        return this.http.request(path, requestOptions);\n    }\n\n    /**\n     * \n     * \n     */\n    public secretsSearchOptionsWithHttpInfo(extraHttpRequestParams?: any): Observable<Response> {\n        const path = this.basePath + '/secrets/search';\n\n        let queryParameters = new URLSearchParams();\n        let headers = new Headers(this.defaultHeaders.toJSON()); // https://github.com/angular/angular/issues/6845\n        // to determine the Content-Type header\n        let consumes: string[] = [\n            'application/json'\n        ];\n\n        // to determine the Accept header\n        let produces: string[] = [\n            'application/json'\n        ];\n\n        let requestOptions: RequestOptionsArgs = new RequestOptions({\n            method: RequestMethod.Options,\n            headers: headers,\n            search: queryParameters,\n            withCredentials:this.configuration.withCredentials\n        });\n        // https://github.com/swagger-api/swagger-codegen/issues/4037\n        if (extraHttpRequestParams) {\n            requestOptions = (<any>Object).assign(requestOptions, extraHttpRequestParams);\n        }\n\n        return this.http.request(path, requestOptions);\n    }\n\n    /**\n     * \n     * \n     */\n    public usersChangepasswordOptionsWithHttpInfo(extraHttpRequestParams?: any): Observable<Response> {\n        const path = this.basePath + '/users/changepassword';\n\n        let queryParameters = new URLSearchParams();\n        let headers = new Headers(this.defaultHeaders.toJSON()); // https://github.com/angular/angular/issues/6845\n        // to determine the Content-Type header\n        let consumes: string[] = [\n            'application/json'\n        ];\n\n        // to determine the Accept header\n        let produces: string[] = [\n            'application/json'\n        ];\n\n        let requestOptions: RequestOptionsArgs = new RequestOptions({\n            method: RequestMethod.Options,\n            headers: headers,\n            search: queryParameters,\n            withCredentials:this.configuration.withCredentials\n        });\n        // https://github.com/swagger-api/swagger-codegen/issues/4037\n        if (extraHttpRequestParams) {\n            requestOptions = (<any>Object).assign(requestOptions, extraHttpRequestParams);\n        }\n\n        return this.http.request(path, requestOptions);\n    }\n\n    /**\n     * \n     * \n     * @param changePasswordRequest \n     */\n    public usersChangepasswordPostWithHttpInfo(changePasswordRequest: models.ChangePasswordRequest, extraHttpRequestParams?: any): Observable<Response> {\n        const path = this.basePath + '/users/changepassword';\n\n        let queryParameters = new URLSearchParams();\n        let headers = new Headers(this.defaultHeaders.toJSON()); // https://github.com/angular/angular/issues/6845\n        // verify required parameter 'changePasswordRequest' is not null or undefined\n        if (changePasswordRequest === null || changePasswordRequest === undefined) {\n            throw new Error('Required parameter changePasswordRequest was null or undefined when calling usersChangepasswordPost.');\n        }\n        // to determine the Content-Type header\n        let consumes: string[] = [\n            'application/json'\n        ];\n\n        // to determine the Accept header\n        let produces: string[] = [\n            'application/json'\n        ];\n\n        // authentication (secretAuthorizer2) required\n        if (this.configuration.apiKey) {\n            headers.set('Authorization', this.configuration.apiKey);\n        }\n\n        headers.set('Content-Type', 'application/json');\n\n        let requestOptions: RequestOptionsArgs = new RequestOptions({\n            method: RequestMethod.Post,\n            headers: headers,\n            body: changePasswordRequest == null ? '' : JSON.stringify(changePasswordRequest), // https://github.com/angular/angular/issues/10612\n            search: queryParameters,\n            withCredentials:this.configuration.withCredentials\n        });\n        // https://github.com/swagger-api/swagger-codegen/issues/4037\n        if (extraHttpRequestParams) {\n            requestOptions = (<any>Object).assign(requestOptions, extraHttpRequestParams);\n        }\n\n        return this.http.request(path, requestOptions);\n    }\n\n    /**\n     * \n     * \n     */\n    public usersForgetpasswordOptionsWithHttpInfo(extraHttpRequestParams?: any): Observable<Response> {\n        const path = this.basePath + '/users/forgetpassword';\n\n        let queryParameters = new URLSearchParams();\n        let headers = new Headers(this.defaultHeaders.toJSON()); // https://github.com/angular/angular/issues/6845\n        // to determine the Content-Type header\n        let consumes: string[] = [\n            'application/json'\n        ];\n\n        // to determine the Accept header\n        let produces: string[] = [\n            'application/json'\n        ];\n\n        let requestOptions: RequestOptionsArgs = new RequestOptions({\n            method: RequestMethod.Options,\n            headers: headers,\n            search: queryParameters,\n            withCredentials:this.configuration.withCredentials\n        });\n        // https://github.com/swagger-api/swagger-codegen/issues/4037\n        if (extraHttpRequestParams) {\n            requestOptions = (<any>Object).assign(requestOptions, extraHttpRequestParams);\n        }\n\n        return this.http.request(path, requestOptions);\n    }\n\n    /**\n     * \n     * \n     * @param fogotPasswordRequest \n     */\n    public usersForgetpasswordPostWithHttpInfo(fogotPasswordRequest: models.FogotPasswordRequest, extraHttpRequestParams?: any): Observable<Response> {\n        const path = this.basePath + '/users/forgetpassword';\n\n        let queryParameters = new URLSearchParams();\n        let headers = new Headers(this.defaultHeaders.toJSON()); // https://github.com/angular/angular/issues/6845\n        // verify required parameter 'fogotPasswordRequest' is not null or undefined\n        if (fogotPasswordRequest === null || fogotPasswordRequest === undefined) {\n            throw new Error('Required parameter fogotPasswordRequest was null or undefined when calling usersForgetpasswordPost.');\n        }\n        // to determine the Content-Type header\n        let consumes: string[] = [\n            'application/json'\n        ];\n\n        // to determine the Accept header\n        let produces: string[] = [\n            'application/json'\n        ];\n\n        headers.set('Content-Type', 'application/json');\n\n        let requestOptions: RequestOptionsArgs = new RequestOptions({\n            method: RequestMethod.Post,\n            headers: headers,\n            body: fogotPasswordRequest == null ? '' : JSON.stringify(fogotPasswordRequest), // https://github.com/angular/angular/issues/10612\n            search: queryParameters,\n            withCredentials:this.configuration.withCredentials\n        });\n        // https://github.com/swagger-api/swagger-codegen/issues/4037\n        if (extraHttpRequestParams) {\n            requestOptions = (<any>Object).assign(requestOptions, extraHttpRequestParams);\n        }\n\n        return this.http.request(path, requestOptions);\n    }\n\n    /**\n     * \n     * \n     * @param id \n     */\n    public usersIdDeleteWithHttpInfo(id: string, extraHttpRequestParams?: any): Observable<Response> {\n        const path = this.basePath + '/users/${id}'\n                    .replace('${' + 'id' + '}', String(id));\n\n        let queryParameters = new URLSearchParams();\n        let headers = new Headers(this.defaultHeaders.toJSON()); // https://github.com/angular/angular/issues/6845\n        // verify required parameter 'id' is not null or undefined\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling usersIdDelete.');\n        }\n        // to determine the Content-Type header\n        let consumes: string[] = [\n            'application/json'\n        ];\n\n        // to determine the Accept header\n        let produces: string[] = [\n            'application/json'\n        ];\n\n        // authentication (secretAuthorizer2) required\n        if (this.configuration.apiKey) {\n            headers.set('Authorization', this.configuration.apiKey);\n        }\n\n        let requestOptions: RequestOptionsArgs = new RequestOptions({\n            method: RequestMethod.Delete,\n            headers: headers,\n            search: queryParameters,\n            withCredentials:this.configuration.withCredentials\n        });\n        // https://github.com/swagger-api/swagger-codegen/issues/4037\n        if (extraHttpRequestParams) {\n            requestOptions = (<any>Object).assign(requestOptions, extraHttpRequestParams);\n        }\n\n        return this.http.request(path, requestOptions);\n    }\n\n    /**\n     * \n     * \n     * @param id \n     */\n    public usersIdGetWithHttpInfo(id: string, extraHttpRequestParams?: any): Observable<Response> {\n        const path = this.basePath + '/users/${id}'\n                    .replace('${' + 'id' + '}', String(id));\n\n        let queryParameters = new URLSearchParams();\n        let headers = new Headers(this.defaultHeaders.toJSON()); // https://github.com/angular/angular/issues/6845\n        // verify required parameter 'id' is not null or undefined\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling usersIdGet.');\n        }\n        // to determine the Content-Type header\n        let consumes: string[] = [\n            'application/json'\n        ];\n\n        // to determine the Accept header\n        let produces: string[] = [\n            'application/json'\n        ];\n\n        // authentication (secretAuthorizer2) required\n        if (this.configuration.apiKey) {\n            headers.set('Authorization', this.configuration.apiKey);\n        }\n\n        let requestOptions: RequestOptionsArgs = new RequestOptions({\n            method: RequestMethod.Get,\n            headers: headers,\n            search: queryParameters,\n            withCredentials:this.configuration.withCredentials\n        });\n        // https://github.com/swagger-api/swagger-codegen/issues/4037\n        if (extraHttpRequestParams) {\n            requestOptions = (<any>Object).assign(requestOptions, extraHttpRequestParams);\n        }\n\n        return this.http.request(path, requestOptions);\n    }\n\n    /**\n     * \n     * \n     * @param id \n     */\n    public usersIdOptionsWithHttpInfo(id: string, extraHttpRequestParams?: any): Observable<Response> {\n        const path = this.basePath + '/users/${id}'\n                    .replace('${' + 'id' + '}', String(id));\n\n        let queryParameters = new URLSearchParams();\n        let headers = new Headers(this.defaultHeaders.toJSON()); // https://github.com/angular/angular/issues/6845\n        // verify required parameter 'id' is not null or undefined\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling usersIdOptions.');\n        }\n        // to determine the Content-Type header\n        let consumes: string[] = [\n            'application/json'\n        ];\n\n        // to determine the Accept header\n        let produces: string[] = [\n            'application/json'\n        ];\n\n        let requestOptions: RequestOptionsArgs = new RequestOptions({\n            method: RequestMethod.Options,\n            headers: headers,\n            search: queryParameters,\n            withCredentials:this.configuration.withCredentials\n        });\n        // https://github.com/swagger-api/swagger-codegen/issues/4037\n        if (extraHttpRequestParams) {\n            requestOptions = (<any>Object).assign(requestOptions, extraHttpRequestParams);\n        }\n\n        return this.http.request(path, requestOptions);\n    }\n\n    /**\n     * \n     * \n     * @param id \n     * @param updateUserRequest \n     */\n    public usersIdPutWithHttpInfo(id: string, updateUserRequest: models.UpdateUserRequest, extraHttpRequestParams?: any): Observable<Response> {\n        const path = this.basePath + '/users/${id}'\n                    .replace('${' + 'id' + '}', String(id));\n\n        let queryParameters = new URLSearchParams();\n        let headers = new Headers(this.defaultHeaders.toJSON()); // https://github.com/angular/angular/issues/6845\n        // verify required parameter 'id' is not null or undefined\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling usersIdPut.');\n        }\n        // verify required parameter 'updateUserRequest' is not null or undefined\n        if (updateUserRequest === null || updateUserRequest === undefined) {\n            throw new Error('Required parameter updateUserRequest was null or undefined when calling usersIdPut.');\n        }\n        // to determine the Content-Type header\n        let consumes: string[] = [\n            'application/json'\n        ];\n\n        // to determine the Accept header\n        let produces: string[] = [\n            'application/json'\n        ];\n\n        // authentication (secretAuthorizer2) required\n        if (this.configuration.apiKey) {\n            headers.set('Authorization', this.configuration.apiKey);\n        }\n\n        headers.set('Content-Type', 'application/json');\n\n        let requestOptions: RequestOptionsArgs = new RequestOptions({\n            method: RequestMethod.Put,\n            headers: headers,\n            body: updateUserRequest == null ? '' : JSON.stringify(updateUserRequest), // https://github.com/angular/angular/issues/10612\n            search: queryParameters,\n            withCredentials:this.configuration.withCredentials\n        });\n        // https://github.com/swagger-api/swagger-codegen/issues/4037\n        if (extraHttpRequestParams) {\n            requestOptions = (<any>Object).assign(requestOptions, extraHttpRequestParams);\n        }\n\n        return this.http.request(path, requestOptions);\n    }\n\n    /**\n     * \n     * \n     */\n    public usersLoginwithfacebookOptionsWithHttpInfo(extraHttpRequestParams?: any): Observable<Response> {\n        const path = this.basePath + '/users/loginwithfacebook';\n\n        let queryParameters = new URLSearchParams();\n        let headers = new Headers(this.defaultHeaders.toJSON()); // https://github.com/angular/angular/issues/6845\n        // to determine the Content-Type header\n        let consumes: string[] = [\n            'application/json'\n        ];\n\n        // to determine the Accept header\n        let produces: string[] = [\n            'application/json'\n        ];\n\n        let requestOptions: RequestOptionsArgs = new RequestOptions({\n            method: RequestMethod.Options,\n            headers: headers,\n            search: queryParameters,\n            withCredentials:this.configuration.withCredentials\n        });\n        // https://github.com/swagger-api/swagger-codegen/issues/4037\n        if (extraHttpRequestParams) {\n            requestOptions = (<any>Object).assign(requestOptions, extraHttpRequestParams);\n        }\n\n        return this.http.request(path, requestOptions);\n    }\n\n    /**\n     * \n     * \n     * @param loginWithTokenRequest \n     */\n    public usersLoginwithfacebookPostWithHttpInfo(loginWithTokenRequest: models.LoginWithTokenRequest, extraHttpRequestParams?: any): Observable<Response> {\n        const path = this.basePath + '/users/loginwithfacebook';\n\n        let queryParameters = new URLSearchParams();\n        let headers = new Headers(this.defaultHeaders.toJSON()); // https://github.com/angular/angular/issues/6845\n        // verify required parameter 'loginWithTokenRequest' is not null or undefined\n        if (loginWithTokenRequest === null || loginWithTokenRequest === undefined) {\n            throw new Error('Required parameter loginWithTokenRequest was null or undefined when calling usersLoginwithfacebookPost.');\n        }\n        // to determine the Content-Type header\n        let consumes: string[] = [\n            'application/json'\n        ];\n\n        // to determine the Accept header\n        let produces: string[] = [\n            'application/json'\n        ];\n\n        headers.set('Content-Type', 'application/json');\n\n        let requestOptions: RequestOptionsArgs = new RequestOptions({\n            method: RequestMethod.Post,\n            headers: headers,\n            body: loginWithTokenRequest == null ? '' : JSON.stringify(loginWithTokenRequest), // https://github.com/angular/angular/issues/10612\n            search: queryParameters,\n            withCredentials:this.configuration.withCredentials\n        });\n        // https://github.com/swagger-api/swagger-codegen/issues/4037\n        if (extraHttpRequestParams) {\n            requestOptions = (<any>Object).assign(requestOptions, extraHttpRequestParams);\n        }\n\n        return this.http.request(path, requestOptions);\n    }\n\n    /**\n     * \n     * \n     */\n    public usersLoginwithgoogleOptionsWithHttpInfo(extraHttpRequestParams?: any): Observable<Response> {\n        const path = this.basePath + '/users/loginwithgoogle';\n\n        let queryParameters = new URLSearchParams();\n        let headers = new Headers(this.defaultHeaders.toJSON()); // https://github.com/angular/angular/issues/6845\n        // to determine the Content-Type header\n        let consumes: string[] = [\n            'application/json'\n        ];\n\n        // to determine the Accept header\n        let produces: string[] = [\n            'application/json'\n        ];\n\n        let requestOptions: RequestOptionsArgs = new RequestOptions({\n            method: RequestMethod.Options,\n            headers: headers,\n            search: queryParameters,\n            withCredentials:this.configuration.withCredentials\n        });\n        // https://github.com/swagger-api/swagger-codegen/issues/4037\n        if (extraHttpRequestParams) {\n            requestOptions = (<any>Object).assign(requestOptions, extraHttpRequestParams);\n        }\n\n        return this.http.request(path, requestOptions);\n    }\n\n    /**\n     * \n     * \n     * @param loginWithTokenRequest \n     */\n    public usersLoginwithgooglePostWithHttpInfo(loginWithTokenRequest: models.LoginWithTokenRequest, extraHttpRequestParams?: any): Observable<Response> {\n        const path = this.basePath + '/users/loginwithgoogle';\n\n        let queryParameters = new URLSearchParams();\n        let headers = new Headers(this.defaultHeaders.toJSON()); // https://github.com/angular/angular/issues/6845\n        // verify required parameter 'loginWithTokenRequest' is not null or undefined\n        if (loginWithTokenRequest === null || loginWithTokenRequest === undefined) {\n            throw new Error('Required parameter loginWithTokenRequest was null or undefined when calling usersLoginwithgooglePost.');\n        }\n        // to determine the Content-Type header\n        let consumes: string[] = [\n            'application/json'\n        ];\n\n        // to determine the Accept header\n        let produces: string[] = [\n            'application/json'\n        ];\n\n        headers.set('Content-Type', 'application/json');\n\n        let requestOptions: RequestOptionsArgs = new RequestOptions({\n            method: RequestMethod.Post,\n            headers: headers,\n            body: loginWithTokenRequest == null ? '' : JSON.stringify(loginWithTokenRequest), // https://github.com/angular/angular/issues/10612\n            search: queryParameters,\n            withCredentials:this.configuration.withCredentials\n        });\n        // https://github.com/swagger-api/swagger-codegen/issues/4037\n        if (extraHttpRequestParams) {\n            requestOptions = (<any>Object).assign(requestOptions, extraHttpRequestParams);\n        }\n\n        return this.http.request(path, requestOptions);\n    }\n\n    /**\n     * \n     * \n     */\n    public usersUpdatesecretkeyOptionsWithHttpInfo(extraHttpRequestParams?: any): Observable<Response> {\n        const path = this.basePath + '/users/updatesecretkey';\n\n        let queryParameters = new URLSearchParams();\n        let headers = new Headers(this.defaultHeaders.toJSON()); // https://github.com/angular/angular/issues/6845\n        // to determine the Content-Type header\n        let consumes: string[] = [\n            'application/json'\n        ];\n\n        // to determine the Accept header\n        let produces: string[] = [\n            'application/json'\n        ];\n\n        let requestOptions: RequestOptionsArgs = new RequestOptions({\n            method: RequestMethod.Options,\n            headers: headers,\n            search: queryParameters,\n            withCredentials:this.configuration.withCredentials\n        });\n        // https://github.com/swagger-api/swagger-codegen/issues/4037\n        if (extraHttpRequestParams) {\n            requestOptions = (<any>Object).assign(requestOptions, extraHttpRequestParams);\n        }\n\n        return this.http.request(path, requestOptions);\n    }\n\n    /**\n     * \n     * \n     * @param updateSecretKeyRequest \n     */\n    public usersUpdatesecretkeyPostWithHttpInfo(updateSecretKeyRequest: models.UpdateSecretKeyRequest, extraHttpRequestParams?: any): Observable<Response> {\n        const path = this.basePath + '/users/updatesecretkey';\n\n        let queryParameters = new URLSearchParams();\n        let headers = new Headers(this.defaultHeaders.toJSON()); // https://github.com/angular/angular/issues/6845\n        // verify required parameter 'updateSecretKeyRequest' is not null or undefined\n        if (updateSecretKeyRequest === null || updateSecretKeyRequest === undefined) {\n            throw new Error('Required parameter updateSecretKeyRequest was null or undefined when calling usersUpdatesecretkeyPost.');\n        }\n        // to determine the Content-Type header\n        let consumes: string[] = [\n            'application/json'\n        ];\n\n        // to determine the Accept header\n        let produces: string[] = [\n            'application/json'\n        ];\n\n        // authentication (secretAuthorizer2) required\n        if (this.configuration.apiKey) {\n            headers.set('Authorization', this.configuration.apiKey);\n        }\n\n        headers.set('Content-Type', 'application/json');\n\n        let requestOptions: RequestOptionsArgs = new RequestOptions({\n            method: RequestMethod.Post,\n            headers: headers,\n            body: updateSecretKeyRequest == null ? '' : JSON.stringify(updateSecretKeyRequest), // https://github.com/angular/angular/issues/10612\n            search: queryParameters,\n            withCredentials:this.configuration.withCredentials\n        });\n        // https://github.com/swagger-api/swagger-codegen/issues/4037\n        if (extraHttpRequestParams) {\n            requestOptions = (<any>Object).assign(requestOptions, extraHttpRequestParams);\n        }\n\n        return this.http.request(path, requestOptions);\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/api/DefaultApi.ts","import { Injectable } from \"@angular/core\";\nimport * as models  from '../providers/model/models';\nimport { Configuration } from '../providers/configuration';\nimport {XHRBackend, Http, RequestOptions} from \"@angular/http\";\nimport {HttpInterceptor} from \"../providers/http/http-interceptor\";\n\n@Injectable()\nexport class Utils {\n    static getConfiguration(loginUser: models.LoginUserResponse) : Configuration {\n\t    let configuration:Configuration = new Configuration();\n\t    configuration.apiKey = loginUser.token;\n\t    configuration.accessToken = loginUser.auth.token;\n\t    configuration.username = loginUser.item.email;\n\t    configuration.withCredentials = false;\n\t    return configuration;\n\t  }\t\n\t \n}\n\n\n// WEBPACK FOOTER //\n// ./src/utils/utils.ts","import { OnInit, Component } from '@angular/core';\n\nimport { NavController, NavParams } from 'ionic-angular';\nimport { Storage } from '@ionic/storage';\nimport { EditSecretPage } from '../edit-secret/edit-secret'\n\nimport * as CryptoJS from 'crypto-js/crypto-js';\n\n@Component({\n  selector: 'page-secret-details',\n  templateUrl: 'secret-details.html'\n})\nexport class SecretDetailsPage implements OnInit {\n  selectedItem: any;\n  SECERET_KEY: string = '';\n  decryptedPassword: string = '';\n\n  constructor(public navCtrl: NavController, public navParams: NavParams, private storage: Storage) {\n    // If we navigated to this page, we will have an item available as a nav param\n    \n    this.selectedItem = this.navParams.get('secret');\n    \n  }\n\n  ngOnInit(): any {\n    this.storage.get('secretKey').then((value) => {\n        this.SECERET_KEY = value;\n        let bytes = CryptoJS.AES.decrypt(this.selectedItem.password.toString(), this.SECERET_KEY);\n        let plaintext = bytes.toString(CryptoJS.enc.Utf8);\n        this.decryptedPassword = plaintext;\n        console.log(this.decryptedPassword);\n\n      });\n  }\n\n  openEdit() {\n  \tthis.navCtrl.push(EditSecretPage, { 'secret': this.selectedItem });\n  }\n  \n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/secret-details/secret-details.ts"],"sourceRoot":""}