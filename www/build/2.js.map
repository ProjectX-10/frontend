{"version":3,"sources":["../../src/pages/change-password/change-password.module.ts","../../src/pages/change-password/change-password.ts"],"names":[],"mappings":"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","file":"2.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { ChangePasswordPage } from './change-password';\n\n@NgModule({\n  declarations: [\n    ChangePasswordPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(ChangePasswordPage),\n  ],\n  exports: [\n    ChangePasswordPage\n  ]\n})\nexport class ChangePaswordModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/change-password/change-password.module.ts","import { OnInit, Component } from '@angular/core';\nimport { AlertController, IonicPage, NavController, NavParams, LoadingController, Loading } from 'ionic-angular';\n\nimport {FormGroup, FormBuilder, FormControl, Validators} from \"@angular/forms\";\nimport { Storage } from '@ionic/storage';\nimport { DefaultApi } from '../../providers/api/DefaultApi';\n\nimport { Utils } from '../../utils/utils';\nimport * as models  from '../../providers/model/models';\nimport * as CryptoJS from 'crypto-js/crypto-js';\n/**\n * Generated class for the AddSecret page.\n *\n * See http://ionicframework.com/docs/components/#navigation for more info\n * on Ionic pages and navigation.\n */\n@IonicPage()\n@Component({\n  selector: 'page-change-password',\n  templateUrl: 'change-password.html',\n})\nexport class ChangePasswordPage implements OnInit {\n\n  secret: any;\n  loading: Loading;\n  chnagePwdFrom: FormGroup;\n  SECERET_KEY: string = '';\n\n  constructor(public navCtrl: NavController, public navParams: NavParams, private alertCtrl: AlertController,\n  \tpublic formBuilder: FormBuilder, private api: DefaultApi, private loadingCtrl: LoadingController, private storage: Storage\n    ) {\n\ndebugger;\n    this.secret = this.navParams.get('secret');\n    this.secret.confirmPassword = this.secret.password;\n    \n    console.log(this.secret);\n  }\n\n  ngOnInit(): any {\n\n    this.storage.get('user').then((val) => {\n      let loginUser: models.LoginUserResponse = val;\n      this.SECERET_KEY = loginUser.item.secretKey;\n      this.secret.userId = loginUser.item.id;\n      this.secret.encryptedPassword = Utils.getEncryptCode(this.secret.password, this.SECERET_KEY);\n      this.api.configuration = Utils.getConfiguration(loginUser);     \n    });\n\n    this.chnagePwdFrom = this.formBuilder.group({      \n      email: ['', [Validators.required]],\n      password: ['', [Validators.required]],\n      confirmPassword: ['', [Validators.required, this.confirmPasswordValidator.bind(this)]],\n      changeKey: ['', [Validators.required]]\n    });\n  }\n\n  onSubmit() {\n    this.showLoading();\n    if (this.chnagePwdFrom.valid == true) {\n      var request: models.UpdateSecretRequest = {} as models.UpdateSecretRequest;\n      request.id = this.secret.id;\n      request.password = this.secret.encryptedPassword;    \n      request.note = this.secret.note;\n      this.api.secretsIdPut(request.id, request).subscribe(response => {        \n          this.navCtrl.push('HomePage');\n        },\n          error => {\n            this.showError(error);\n          \n        });\n    }\n    \n  }\n\n  isValid(field: string) {\n    let formField = this.chnagePwdFrom.controls[field];\n    if (formField !== undefined) {\n       return (formField.valid || formField.pristine);\n    }\n    return true;\n  }\n\n  domainValidator(control: FormControl): {[s: string]: boolean} {\n    if (control.value !== '') {\n      return {invalidDomain: true};\n    }\n  }\n\n  usernameValidator(control: FormControl): {[s: string]: boolean} {\n    if (control.value !== '') {\n      return {invalidUsername: true};\n    }\n  }\n\n  passwordValidator(control: FormControl): {[s: string]: boolean} {\n    if (control.value !== '') {      \n        return {invalidPassword: true};      \n    }\n  }\n\n  confirmPasswordValidator(control: FormControl): {[s: string]: boolean} {\n    //debugger;\n    if (control !== undefined) {\n      if (control.value !== this.secret.password) {\n        return {invalidConfirmPassord: true};\n      }\n    }\n  }\n\n  noteValidator(control: FormControl): {[s: string]: boolean} {\n        return {invalidNote: true};\n  }\n\n  onInputTime(password: string){\n  \tthis.secret.encryptedPassword = Utils.getEncryptCode(this.secret.password, this.SECERET_KEY);\n  }\n\n  showLoading() {\n    this.loading = this.loadingCtrl.create({\n      content: 'Please wait...',\n      dismissOnPageChange: true\n    });\n    this.loading.present();\n  }\n\n  showError(text) {\n    this.loading.dismiss();\n    let errorMsg = this.getErrorMessage(text)\n    let alert = this.alertCtrl.create({\n      title: 'Fail',\n      subTitle: errorMsg,\n      buttons: ['OK']\n    });\n    alert.present();\n  }  \n\n  getErrorMessage(text): string {\n    try {\n      var object = JSON.parse(text._body);\n      return object.errorMessage;\n    } catch (e){\n      return text;\n    }\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/change-password/change-password.ts"],"sourceRoot":""}